{"version":3,"sources":["components/Input/StyledInput.js","components/Input/Input.js","components/Output/Output.js","components/MainPage/StyledMainPage.js","components/MainPage/MainPage.js","App.js","fsm/index.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Title","h1","textarea","Input","useState","code","setCode","value","onValueChange","highlight","languages","js","padding","style","fontSize","overflow","Output","OuterContainer","LeftContainer","RightContainer","MainPage","App","initialState","states","error","transitionSubsrcibers","Set","errorSubscribers","this","state","transitionName","nextState","transitions","forEach","transitionFunction","errorFunction","onTransition","onError","add","unsubscribe","delete","up","TOGGLE","right","down","left","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAGaA,EAAYC,IAAOC,IAAV,qFAKTC,EAAQF,IAAOG,GAAV,4B,GAGQH,IAAOI,SAAV,4B,kDCkBRC,EApBD,WACV,MAAwBC,mBAAS,wBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OAEI,eAACT,EAAD,WACA,cAACG,EAAD,yBACA,cAAC,IAAD,CACEO,MAAOF,EACPG,cAAeF,EACfG,UAAW,SAACJ,GAAD,OAAUI,oBAAUJ,EAAMK,YAAUC,KAC/CC,QAAS,GACTC,MAAO,CACLC,SAAU,OACVC,SAAU,cCZPC,EARA,WACX,OACI,yBCAKC,EAAiBnB,IAAOC,IAAV,kGAMdmB,EAAgBpB,IAAOC,IAAV,oGAKboB,EAAiBrB,IAAOC,IAAV,+FCDZqB,EATE,WACb,OACI,eAACH,EAAD,WACI,cAACC,EAAD,UAAe,cAAC,EAAD,MACf,cAACC,EAAD,UAAgB,cAAC,EAAD,U,gBC2CbE,GA/CH,ICLZ,WAME,cAAoC,IAAvBC,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,OAAQ,yBAJnCC,MAAQ,GAI2B,KAFnCC,sBAAwB,IAAIC,IAEO,KADnCC,iBAAmB,IAAID,IAErBE,KAAKC,MAAQP,EACbM,KAAKL,OAASA,EARlB,8CAWE,SAAWO,GAAiB,IAAD,WACnBC,EAAS,UAAGH,KAAKL,OAAOK,KAAKC,cAApB,iBAAG,EAAyBG,mBAA5B,aAAG,EAAuCF,GAErDC,GACFH,KAAKC,MAAQE,EACbH,KAAKH,sBAAsBQ,SAAQ,SAACC,GAAD,OACjCA,EAAmB,EAAKL,UAE1BD,KAAKJ,MAAQ,GACbI,KAAKD,iBAAiBM,SAAQ,SAACE,GAAD,OAC5BA,EAAc,EAAKX,YAGrBI,KAAKJ,MAAL,iCAAuCI,KAAKC,MAA5C,eAAwDC,GACxDF,KAAKD,iBAAiBM,SAAQ,SAACE,GAAD,OAC5BA,EAAc,EAAKX,aA1B3B,sBAgCE,WACE,OAAOI,KAAKC,QAjChB,sBAoCE,WACE,GAAGD,KAAKJ,MACN,OAAOI,KAAKJ,QAtClB,uBA0CE,SAAUY,EAAcC,GAAS,IAAD,OAG9B,OAFAT,KAAKH,sBAAsBa,IAAKF,GAChCC,GAAWT,KAAKD,iBAAiBW,IAAKD,GAC/B,kBAAK,EAAKE,YAAYH,EAAcC,MA7C/C,yBA+CE,SAAYD,EAAcC,GACxBT,KAAKH,sBAAsBe,OAAQJ,GACnCC,GAAWT,KAAKD,iBAAiBa,OAAQH,OAjD7C,KDKY,CAAQ,CAClBf,aAAc,KACdC,OAAQ,CACNkB,GAAI,CACFT,YAAa,CACXU,OAAQ,UAGZC,MAAO,CACLX,YAAa,CACXU,OAAQ,SAGZE,KAAM,CACJZ,YAAa,CACXU,OAAQ,SAGZG,KAAM,CACJb,YAAa,CACXU,OAAQ,UAMN,WAkBR,OAAO,cAAC,EAAD,MErCMI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8660f57e.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const Container = styled.div`\npadding: 32px;\ndisplay: flex;\nflex-direction: column;\n`\nexport const Title = styled.h1`\n`\n\nexport const InputField = styled.textarea`\n`","import React ,{useState}from 'react'\nimport { Container, InputField, Title } from './StyledInput'\n\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/themes/prism.css\"; //Example style, you can use another\n\nconst Input = () => {\n    const [code, setCode] = useState(`{\"moshe\":\"halastra\"}`)\n    return (\n        \n        <Container>\n        <Title>FSM Editor</Title>\n        <Editor\n          value={code}\n          onValueChange={setCode}\n          highlight={(code) => highlight(code, languages.js)}\n          padding={10}\n          style={{\n            fontSize: '20px',\n            overflow: 'auto'\n          }}\n        />\n        </Container>\n    )\n}\n\nexport default Input\n","import React from 'react'\n\nconst Output = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Output\n","import styled from 'styled-components'\n\n\n\nexport const OuterContainer = styled.div`\n    display: flex;\n    height:100vh;\n    width:100vw;\n    flex:1;\n`\nexport const LeftContainer = styled.div`\n    background-color: whitesmoke;\n    height: 100%;\n    width: 100%;\n`\nexport const RightContainer = styled.div`\n    background-color: white;\n    height: 100%;\n    width: 100%;\n`","import React from 'react'\nimport Input from '../Input/Input'\nimport Output from '../Output/Output'\nimport { LeftContainer, OuterContainer, RightContainer } from './StyledMainPage'\n\nconst MainPage = () => {\n    return (\n        <OuterContainer>\n            <LeftContainer><Input/></LeftContainer>\n            <RightContainer><Output/></RightContainer>\n        </OuterContainer>\n    )\n}\n\nexport default MainPage\n","import { useEffect } from 'react';\nimport MainPage from './components/MainPage/MainPage';\nimport { FSM } from './fsm';\nimport { useFSM } from './fsm/fsm-react';\n\nconst fsm = new FSM({\n  initialState: \"up\",\n  states: {\n    up: {\n      transitions: {\n        TOGGLE: \"right\",\n      }\n    },\n    right: {\n      transitions: {\n        TOGGLE: \"down\"\n      }\n    },\n    down: {\n      transitions: {\n        TOGGLE: \"left\"\n      }\n    },\n    left: {\n      transitions: {\n        TOGGLE: \"up\"\n      }\n    },\n  }\n});\n\nconst App=()=> {\n  // const { state, error, transition } = useFSM(fsm);\n  //   useEffect(() => {\n  //   console.log(\"in\");\n  //     return () => {\n  //       console.log(\"out\");\n  //     }\n  //   }, [state])\n  // return (\n  //   <div>\n  //     <button onClick={() => transition(\"TOGGLE\")}>toggle</button>\n  //     <button onClick={() => transition(\"UNSUPPORTED_TRANSITION\")}>\n  //       Error me!\n  //     </button>\n  //     <div>State is: {state}</div>\n  //     {error ? <div>{error}</div> : null}\n  //   </div>\n  // );\n  return <MainPage/>\n}\n\nexport default App;\n","export class FSM {\n  state;\n  error = \"\";\n  states;\n  transitionSubsrcibers = new Set();\n  errorSubscribers = new Set();\n  constructor({initialState, states}){\n    this.state = initialState;\n    this.states = states;\n  }\n\n  transition(transitionName) {\n    const nextState = this.states[this.state]?.transitions?.[transitionName];\n    //check if the state has a transition with said name\n    if (nextState) {\n      this.state = nextState;\n      this.transitionSubsrcibers.forEach((transitionFunction) =>\n        transitionFunction(this.state)\n      );\n      this.error = \"\";\n      this.errorSubscribers.forEach((errorFunction) =>\n        errorFunction(this.error)\n      );\n    } else {\n      this.error = `Error Can't transition ${this.state} to ${transitionName}`;\n      this.errorSubscribers.forEach((errorFunction) =>\n        errorFunction(this.error)\n      );\n    }\n  }\n\n\n  getState(){\n    return this.state\n  }\n\n  getError(){\n    if(this.error){\n      return this.error\n    }\n  }\n\n  subscribe(onTransition, onError){\n    this.transitionSubsrcibers.add((onTransition))\n    onError && this.errorSubscribers.add((onError))\n    return ()=> this.unsubscribe(onTransition, onError)\n  }\n  unsubscribe(onTransition, onError){\n    this.transitionSubsrcibers.delete((onTransition))\n    onError && this.errorSubscribers.delete((onError))\n  }\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}