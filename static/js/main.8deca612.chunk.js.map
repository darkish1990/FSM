{"version":3,"sources":["fsm/index.js","components/Input/StyledInput.js","components/Input/Input.js","components/Output/Output.js","pages/MainPage/StyledMainPage.js","pages/MainPage/MainPage.js","fsm/fsm-react.js","App.js","reportWebVitals.js","index.js"],"names":["FSM","initialState","states","error","transitionSubsrcibers","Set","errorSubscribers","this","state","transitionName","nextState","transitions","forEach","transitionFunction","errorFunction","onTransition","onError","add","unsubscribe","delete","Container","styled","div","Title","h1","TitleContainer","Button","button","ErrorMsg","Input","parsingError","fsm","clickHandler","useState","JSON","stringify","undefined","code","setCode","onClick","value","onValueChange","highlight","languages","js","padding","style","minHeight","overflow","fontSize","Output","transition","console","log","OuterContainer","LeftContainer","RightContainer","initalFsm","up","TOGGLE","right","down","left","exit","MainPage","setFSM","getState","setState","getError","setError","useCallback","useEffect","subscribe","useFSM","setParsingError","parsedCode","parse","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAaA,EAAb,WAME,cAAoC,IAAvBC,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,OAAQ,yBAJnCC,MAAQ,GAI2B,KAFnCC,sBAAwB,IAAIC,IAEO,KADnCC,iBAAmB,IAAID,IAErBE,KAAKC,MAAQP,EACbM,KAAKL,OAASA,EARlB,8CAWE,SAAWO,GAAiB,IAAD,WACnBC,EAAS,UAAGH,KAAKL,OAAOK,KAAKC,cAApB,iBAAG,EAAyBG,mBAA5B,aAAG,EAAuCF,GAErDC,GACFH,KAAKC,MAAQE,EACbH,KAAKH,sBAAsBQ,SAAQ,SAACC,GAAD,OACjCA,EAAmB,EAAKL,UAE1BD,KAAKJ,MAAQ,GACbI,KAAKD,iBAAiBM,SAAQ,SAACE,GAAD,OAC5BA,EAAc,EAAKX,YAGrBI,KAAKJ,MAAL,iCAAuCI,KAAKC,MAA5C,eAAwDC,GACxDF,KAAKD,iBAAiBM,SAAQ,SAACE,GAAD,OAC5BA,EAAc,EAAKX,aA1B3B,sBAgCE,WACE,OAAOI,KAAKC,QAjChB,sBAoCE,WACE,GAAGD,KAAKJ,MACN,OAAOI,KAAKJ,QAtClB,uBA0CE,SAAUY,EAAcC,GAAS,IAAD,OAG9B,OAFAT,KAAKH,sBAAsBa,IAAKF,GAChCC,GAAWT,KAAKD,iBAAiBW,IAAKD,GAC/B,kBAAK,EAAKE,YAAYH,EAAcC,MA7C/C,yBA+CE,SAAYD,EAAcC,GACxBT,KAAKH,sBAAsBe,OAAQJ,GACnCC,GAAWT,KAAKD,iBAAiBa,OAAQH,OAjD7C,K,cCGaI,EAAYC,IAAOC,IAAV,qFAKTC,EAAQF,IAAOG,GAAV,8DAILC,EAAiBJ,IAAOC,IAAV,kEAIdI,EAASL,IAAOM,OAAV,uRAcNC,EAAWP,IAAOC,IAAV,+D,mDCMNO,EA3BD,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAaC,EAAuB,EAAvBA,IAAIC,EAAmB,EAAnBA,aAChC,EAAwBC,mBAASC,KAAKC,UAAUJ,OAAIK,EAAU,IAA9D,mBAAOC,EAAP,KAAaC,EAAb,KAEE,OAEI,eAAClB,EAAD,WACE,eAACK,EAAD,WACA,cAACF,EAAD,yBACA,cAACG,EAAD,CAAQa,QAAS,kBAAIP,EAAaK,IAAlC,6BAGDP,GAAc,cAACF,EAAD,uCACf,cAAC,IAAD,CACEY,MAAOH,EACPI,cAAeH,EACfI,UAAW,SAACL,GAAD,OAAUK,oBAAUL,EAAMM,YAAUC,KAC/CC,QAAS,GACTC,MAAO,CACLC,UAAW,QACXC,SAAU,OACVC,SAAU,cChBPC,EAXA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,WAAWpB,EAAS,EAATA,IAGxB,OAFAqB,QAAQC,IAAI,CAACF,eACbC,QAAQC,IAAI,CAACtB,QAET,0CCFKuB,EAAiBjC,IAAOC,IAAV,kGAMdiC,EAAgBlC,IAAOC,IAAV,oGAKbkC,EAAiBnC,IAAOC,IAAV,+FCRrBmC,EAAY,CACdxD,aAAc,KACdC,OAAQ,CACNwD,GAAI,CACF/C,YAAa,CACXgD,OAAQ,UAGZC,MAAO,CACLjD,YAAa,CACXgD,OAAQ,SAGZE,KAAM,CACJlD,YAAa,CACXgD,OAAQ,SAGZG,KAAM,CACJnD,YAAa,CACXgD,OAAQ,OAGZI,KAAK,CACDpD,YAAY,MA6CPqD,EAxBE,WACb,MAAsB/B,mBAASwB,GAA/B,mBAAO1B,EAAP,KAAYkC,EAAZ,KACA,ECpDgB,SAAClC,GACjB,MAA0BE,mBAASF,EAAImC,YAAvC,mBAAO1D,EAAP,KAAc2D,EAAd,KACA,EAA0BlC,mBAASF,EAAIqC,YAAvC,mBAAOjE,EAAP,KAAckE,EAAd,KAEMtD,EAAeuD,uBACjB,SAAC5D,GACGyD,EAASzD,KAEb,IAEEM,EAAUsD,uBACZ,SAACnE,GACGkE,EAASlE,KAEb,IAiBJ,OAdAoE,qBAAU,WAEN,OADAxC,EAAIyC,UAAUzD,EAAaC,GACpB,WACHe,EAAIb,YAAYH,EAAaC,MAElC,CAACe,EAAIhB,EAAaC,IASd,CAACR,QAAOL,QAAOgD,WAPJmB,uBACd,SAAC7D,GACGsB,EAAIoB,WAAW1C,KAEnB,CAACsB,KDwByB0C,CAAO,IAAIzE,EAAI+B,IAA9BoB,GAAf,EAAQ3C,MAAR,EAAe2C,YACf,EAAwClB,mBAAS,MAAjD,mBAAOH,EAAP,KAAqB4C,EAArB,KAaA,OACI,eAACpB,EAAD,WACI,cAACC,EAAD,UAAe,cAAC,EAAD,CAAOzB,aAAcA,EAAcC,IAAKA,EAAKC,aAdjD,SAACK,GAChB,IACI,IAAMsC,EAAazC,KAAK0C,MAAMvC,GACCsC,EApB1B1E,cAqBHyE,EAAgB,uBAEdT,EAAOU,GACb,MAAOE,GACLH,EAAgBG,SAOhB,cAACrB,EAAD,UAAgB,cAAC,EAAD,CAAQL,WAAYA,EAAYpB,IAAKA,UEnBlD+C,GA/CH,IAAI9E,EAAI,CAClBC,aAAc,KACdC,OAAQ,CACNwD,GAAI,CACF/C,YAAa,CACXgD,OAAQ,UAGZC,MAAO,CACLjD,YAAa,CACXgD,OAAQ,SAGZE,KAAM,CACJlD,YAAa,CACXgD,OAAQ,SAGZG,KAAM,CACJnD,YAAa,CACXgD,OAAQ,UAMN,WAkBR,OAAO,cAAC,EAAD,MCrCMoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8deca612.chunk.js","sourcesContent":["export class FSM {\n  state;\n  error = \"\";\n  states;\n  transitionSubsrcibers = new Set();\n  errorSubscribers = new Set();\n  constructor({initialState, states}){\n    this.state = initialState;\n    this.states = states;\n  }\n\n  transition(transitionName) {\n    const nextState = this.states[this.state]?.transitions?.[transitionName];\n    //check if the state has a transition with said name\n    if (nextState) {\n      this.state = nextState;\n      this.transitionSubsrcibers.forEach((transitionFunction) =>\n        transitionFunction(this.state)\n      );\n      this.error = \"\";\n      this.errorSubscribers.forEach((errorFunction) =>\n        errorFunction(this.error)\n      );\n    } else {\n      this.error = `Error Can't transition ${this.state} to ${transitionName}`;\n      this.errorSubscribers.forEach((errorFunction) =>\n        errorFunction(this.error)\n      );\n    }\n  }\n\n\n  getState(){\n    return this.state\n  }\n\n  getError(){\n    if(this.error){\n      return this.error\n    }\n  }\n\n  subscribe(onTransition, onError){\n    this.transitionSubsrcibers.add((onTransition))\n    onError && this.errorSubscribers.add((onError))\n    return ()=> this.unsubscribe(onTransition, onError)\n  }\n  unsubscribe(onTransition, onError){\n    this.transitionSubsrcibers.delete((onTransition))\n    onError && this.errorSubscribers.delete((onError))\n  }\n\n}","import styled from 'styled-components'\n\n\nexport const Container = styled.div`\npadding: 32px;\ndisplay: flex;\nflex-direction: column;\n`\nexport const Title = styled.h1`\nmargin-right: 16px;\ncolor:grey;\n`\nexport const TitleContainer = styled.div`\ndisplay: flex;\nalign-items: center;\n`\nexport const Button = styled.button`\n    height: 30px;\n    width: 140px;\n    font-weight: 600;\n    background-color: white;\n    border: none;\n    color: grey;\n    transition: 0.3s;\n    &:hover{\n        background-color: grey;\n        color: white;\n        opacity: 0.8;\n    }\n`\nexport const ErrorMsg = styled.div`\n  color:red;\n  font-weight: 600;\n`\n\n","import React ,{useState}from 'react'\nimport { Button, Container, ErrorMsg,  Title, TitleContainer } from './StyledInput'\n\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/themes/prism.css\"; //Example style, you can use another\n\nconst Input = ({ parsingError,fsm,clickHandler }) => {\n  const [code, setCode] = useState(JSON.stringify(fsm,undefined,2)) \n\n    return (\n        \n        <Container>\n          <TitleContainer>\n          <Title>FSM Editor</Title>\n          <Button onClick={()=>clickHandler(code)}>Generate Fsm</Button>\n          </TitleContainer>\n        \n        {parsingError&&<ErrorMsg>this is not a valid json</ErrorMsg>}\n        <Editor\n          value={code}\n          onValueChange={setCode}\n          highlight={(code) => highlight(code, languages.js)}\n          padding={10}\n          style={{\n            minHeight: '500px',\n            overflow: 'auto',\n            fontSize: '20px',\n          }}\n        />\n        </Container>\n    )\n}\n\nexport default Input\n","import React from 'react'\n\nconst Output = ({transition,fsm}) => {\n    console.log({transition});\n    console.log({fsm});\n    return (\n        <div>\n            output\n            \n        </div>\n    )\n}\n\nexport default Output\n","import styled from 'styled-components'\n\n\n\nexport const OuterContainer = styled.div`\n    display: flex;\n    height:100vh;\n    width:100vw;\n    flex:1;\n`\nexport const LeftContainer = styled.div`\n    background-color: whitesmoke;\n    height: 100%;\n    width: 100%;\n`\nexport const RightContainer = styled.div`\n    background-color: white;\n    height: 100%;\n    width: 100%;\n`","import React, { useRef, useState } from 'react'\nimport { FSM } from '../../fsm';\nimport { useFSM } from '../../fsm/fsm-react';\nimport Input from '../../components/Input/Input'\nimport Output from '../../components/Output/Output'\nimport { LeftContainer, OuterContainer, RightContainer } from './StyledMainPage'\n\nconst initalFsm = {\n    initialState: \"up\",\n    states: {\n      up: {\n        transitions: {\n          TOGGLE: \"right\",\n        }\n      },\n      right: {\n        transitions: {\n          TOGGLE: \"down\"\n        }\n      },\n      down: {\n        transitions: {\n          TOGGLE: \"left\"\n        }\n      },\n      left: {\n        transitions: {\n          TOGGLE: \"up\"\n        }\n      },\n      exit:{\n          transitions:{\n\n          }\n      }\n    }\n  };\n\n  const checkValidationForJsonObj=(jsonObj)=>{\n    if (!jsonObj.initialState) {\n        return false\n   }\n  //  for (const iterator in jsonObj.states) {\n  //    console.log(iterator);\n  //   if (!iterator.transitions) {\n  //     return false\n  //   }\n  //  }\n   \n      return true\n  }\n\nconst MainPage = () => {\n    const [fsm, setFSM] = useState(initalFsm)\n    const { state, transition } = useFSM(new FSM(fsm));\n    const [parsingError, setParsingError] = useState(null)\n    const clickHandler=(code)=>{\n        try {\n            const parsedCode = JSON.parse(code);\n            if (!checkValidationForJsonObj(parsedCode)) {\n              setParsingError('code is not a valid')\n                }\n                setFSM(parsedCode)\n        } catch (e) {\n            setParsingError(e);\n        }\n    }\n\n    return (\n        <OuterContainer>\n            <LeftContainer><Input parsingError={parsingError} fsm={fsm} clickHandler={clickHandler}/></LeftContainer>\n            <RightContainer><Output transition={transition} fsm={fsm}/></RightContainer>\n        </OuterContainer>\n    )\n}\n\nexport default MainPage\n","import { useState, useCallback, useEffect } from 'react'\n\nexport const useFSM=(fsm)=>{\n    const [state, setState] = useState(fsm.getState())\n    const [error, setError] = useState(fsm.getError())\n\n    const onTransition = useCallback(\n        (nextState) => {\n            setState(nextState)\n        },\n        [],\n    )\n    const onError = useCallback(\n        (error) => {\n            setError(error)\n        },\n        [],\n    )\n\n    useEffect(() => {\n        fsm.subscribe(onTransition,onError)\n        return () => {\n            fsm.unsubscribe(onTransition,onError)\n        }\n    }, [fsm,onTransition,onError])\n\n    const transition =useCallback(\n        (transitionName) => {\n            fsm.transition(transitionName)\n        },\n        [fsm],\n    )\n\n    return {state, error, transition}\n}","import { useEffect } from 'react';\nimport MainPage from './pages/MainPage/MainPage';\nimport { FSM } from './fsm';\nimport { useFSM } from './fsm/fsm-react';\n\nconst fsm = new FSM({\n  initialState: \"up\",\n  states: {\n    up: {\n      transitions: {\n        TOGGLE: \"right\",\n      }\n    },\n    right: {\n      transitions: {\n        TOGGLE: \"down\"\n      }\n    },\n    down: {\n      transitions: {\n        TOGGLE: \"left\"\n      }\n    },\n    left: {\n      transitions: {\n        TOGGLE: \"up\"\n      }\n    },\n  }\n});\n\nconst App=()=> {\n  // const { state, error, transition } = useFSM(fsm);\n  //   useEffect(() => {\n  //   console.log(\"in\");\n  //     return () => {\n  //       console.log(\"out\");\n  //     }\n  //   }, [state])\n  // return (\n  //   <div>\n  //     <button onClick={() => transition(\"TOGGLE\")}>toggle</button>\n  //     <button onClick={() => transition(\"UNSUPPORTED_TRANSITION\")}>\n  //       Error me!\n  //     </button>\n  //     <div>State is: {state}</div>\n  //     {error ? <div>{error}</div> : null}\n  //   </div>\n  // );\n  return <MainPage/>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}