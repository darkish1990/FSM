{"version":3,"sources":["fsm/index.js","components/Input/StyledInput.js","components/Input/Input.js","components/Output/StyledOutput.js","components/Output/Output.js","pages/MainPage/StyledMainPage.js","pages/MainPage/MainPage.js","fsm/fsm-react.js","App.js","reportWebVitals.js","index.js"],"names":["FSM","initialState","states","error","transitionSubsrcibers","Set","errorSubscribers","this","state","transitionName","nextState","transitions","forEach","transitionFunction","errorFunction","onTransition","onError","add","delete","Container","styled","div","Title","h1","TitleContainer","Button","button","ErrorMsg","Input","parsingError","fsm","clickHandler","useState","JSON","stringify","undefined","code","setCode","onClick","value","onValueChange","highlight","languages","js","padding","style","minHeight","overflow","fontSize","DropDownContainer","DropDownContent","DropDownButton","Output","transition","possibilities","actionsStack","setActionsStack","mappedPossibilities","Object","keys","dropDownHovered","setDropDownHovered","onMouseEnter","onMouseLeave","class","map","posibility","OuterContainer","LeftContainer","RightContainer","initalFsm","up","RIGHT","right","DOWN","down","LEFT","left","UP","MainPage","setFSM","getState","setState","getError","setError","useCallback","useEffect","subscribe","unsubscribe","useFSM","setParsingError","parsedJson","parse","prev","newFSMOptions","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAaA,EAAb,WAME,cAAoC,IAAvBC,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,OAAQ,yBAJnCC,MAAQ,GAI2B,KAFnCC,sBAAwB,IAAIC,IAEO,KADnCC,iBAAmB,IAAID,IAErBE,KAAKC,MAAQP,EACbM,KAAKN,aAAeA,EACpBM,KAAKL,OAASA,EATlB,8CAYE,SAAWO,GAAiB,IAAD,WACnBC,EAAS,UAAGH,KAAKL,OAAOK,KAAKC,cAApB,iBAAG,EAAyBG,mBAA5B,aAAG,EAAuCF,GAErDC,GACFH,KAAKC,MAAQE,EACbH,KAAKH,sBAAsBQ,SAAQ,SAACC,GAAD,OACjCA,EAAmB,EAAKL,UAE1BD,KAAKJ,MAAQ,GACbI,KAAKD,iBAAiBM,SAAQ,SAACE,GAAD,OAC5BA,EAAc,EAAKX,YAGrBI,KAAKJ,MAAL,iCAAuCI,KAAKC,MAA5C,eAAwDC,GACxDF,KAAKD,iBAAiBM,SAAQ,SAACE,GAAD,OAC5BA,EAAc,EAAKX,aA3B3B,sBAiCE,WACE,OAAOI,KAAKC,QAlChB,sBAqCE,WACE,GAAGD,KAAKJ,MACN,OAAOI,KAAKJ,QAvClB,uBA2CE,SAAUY,EAAcC,GACtBT,KAAKH,sBAAsBa,IAAKF,GAChCC,GAAWT,KAAKD,iBAAiBW,IAAKD,KA7C1C,yBA+CE,SAAYD,EAAcC,GACxBT,KAAKH,sBAAsBc,OAAQH,GACnCC,GAAWT,KAAKD,iBAAiBY,OAAQF,OAjD7C,K,cCGaG,EAAYC,IAAOC,IAAV,qFAKTC,EAAQF,IAAOG,GAAV,8DAILC,EAAiBJ,IAAOC,IAAV,kEAIdI,EAASL,IAAOM,OAAV,uRAcNC,EAAWP,IAAOC,IAAV,+D,mDCKNO,EA1BD,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAaC,EAAuB,EAAvBA,IAAIC,EAAmB,EAAnBA,aAC/B,EAAwBC,mBAASC,KAAKC,UAAUJ,EAAI5B,YAAOiC,EAAU,IAArE,mBAAOC,EAAP,KAAaC,EAAb,KACC,OAEI,eAAClB,EAAD,WACE,eAACK,EAAD,WACA,cAACF,EAAD,yBACA,cAACG,EAAD,CAAQa,QAAS,kBAAIP,EAAaK,IAAlC,6BAGDP,GAAc,cAACF,EAAD,uCACf,cAAC,IAAD,CACEY,MAAOH,EACPI,cAAeH,EACfI,UAAW,SAACL,GAAD,OAAUK,oBAAUL,EAAMM,YAAUC,KAC/CC,QAAS,GACTC,MAAO,CACLC,UAAW,QACXC,SAAU,OACVC,SAAU,cC1BTC,EAAoB7B,IAAOC,IAAV,4BAEjBF,EAAYC,IAAOC,IAAV,6DAIT6B,EAAkB9B,IAAOC,IAAV,8OAWf8B,EAAiB/B,IAAOM,OAAV,+HAOdD,EAASL,IAAOM,OAAV,8PCJJ0B,EAnBA,SAAC,GAAyD,IAAD,EAAvDC,EAAuD,EAAvDA,WAAWvB,EAA4C,EAA5CA,IAAItB,EAAwC,EAAxCA,MACtB8C,GAD8D,EAAlCC,aAAkC,EAArBC,gBAC5B,OAAG1B,QAAH,IAAGA,GAAH,UAAGA,EAAK5B,OAAOM,UAAf,aAAG,EAAoBG,aACpC8C,EAAsBC,OAAOC,KAAKL,GACxC,EAA8CtB,oBAAS,GAAvD,mBAAO4B,EAAP,KAAwBC,EAAxB,KACA,OACI,cAAC,EAAD,UACI,eAACZ,EAAD,CAAmBa,aAAc,kBAAID,GAAmB,IAAOE,aAAc,kBAAIF,GAAmB,IAApG,UACA,cAACV,EAAD,8BACMS,GAAkB,cAACV,EAAD,CAAiBc,MAAM,mBAAvB,SACbV,GAAiBG,EAAoBQ,KAAI,SAACC,GACrC,OAAM,cAAC,EAAD,CAAQ5B,QAAS,WAAKe,EAAWa,IAAjC,SAAgDA,eCTrEC,EAAiB/C,IAAOC,IAAV,kGAMd+C,EAAgBhD,IAAOC,IAAV,oGAKbgD,EAAiBjD,IAAOC,IAAV,+FCRrBiD,EAAY,CACdrE,aAAc,KAChBC,OAAQ,CACNqE,GAAI,CACF5D,YAAa,CACX6D,MAAO,UAGXC,MAAO,CACL9D,YAAa,CACX+D,KAAM,SAGVC,KAAM,CACJhE,YAAa,CACXiE,KAAM,SAGVC,KAAM,CACJlE,YAAa,CACXmE,GAAI,SAkCGC,EA5BE,WACb,MAAsB/C,oBAAS,kBAAI,IAAIhC,EAAIsE,MAA3C,mBAAOxC,EAAP,KAAYkD,EAAZ,KACA,EAAwChD,mBAAS,IAAjD,mBAAOuB,EAAP,KAAqBC,EAArB,KACA,EClCgB,SAAC1B,GACjB,MAA0BE,mBAASF,EAAImD,YAAvC,mBAAOzE,EAAP,KAAc0E,EAAd,KACA,EAA0BlD,mBAASF,EAAIqD,YAAvC,mBAAOhF,EAAP,KAAciF,EAAd,KAEMrE,EAAesE,uBACjB,SAAC3E,GAEGwE,EAASxE,KAEb,IAEEM,EAAUqE,uBACZ,SAAClF,GACGiF,EAASjF,KAEb,IAGJmF,qBAAU,WAEN,OADAxD,EAAIyD,UAAUxE,EAAaC,GACpB,WACHc,EAAI0D,YAAYzE,EAAaC,MAElC,CAACc,EAAIf,EAAaC,IAErBsE,qBAAU,WACHxD,EAAImD,aAAczE,GACjB0E,EAASpD,EAAImD,cAElB,CAACnD,EAAItB,IAER,IAAM6C,EAAYgC,uBACd,SAAC5E,GACGqB,EAAIuB,WAAW5C,KAEnB,CAACqB,IAGL,MAAO,CAACtB,QAAOL,QAAOkD,cDJQoC,CAAO3D,GAA7BtB,EAAR,EAAQA,MAAO6C,EAAf,EAAeA,WACf,EAAwCrB,mBAAS,MAAjD,mBAAOH,EAAP,KAAqB6D,EAArB,KAgBA,OACI,eAACvB,EAAD,WACI,cAACC,EAAD,UAAe,cAAC,EAAD,CAAOvC,aAAcA,EAAcC,IAAKA,EAAKC,aAjBjD,SAACK,GAChB,IACI,IAAMuD,EAAa1D,KAAK2D,MAAMxD,GAC1B4C,GAAO,SAAAa,GACL,IAAMC,EAAa,2BACdD,GADc,IAEjB3F,OAAQyF,IAEV,OAAO,IAAI3F,EAAI8F,MAEvB,MAAOC,GACLL,EAAgBK,SAOhB,cAAC1B,EAAD,UAAgB,cAAC,EAAD,CAAQhB,WAAYA,EAAYvB,IAAKA,EAAKtB,MAAOA,EAAO+C,aAAcA,EAAcC,gBAAiBA,UElDlHwC,EAJL,WACR,OAAO,cAAC,EAAD,KCSMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bc2906fb.chunk.js","sourcesContent":["export class FSM {\n  state;\n  error = \"\";\n  states;\n  transitionSubsrcibers = new Set();\n  errorSubscribers = new Set();\n  constructor({initialState, states}){\n    this.state = initialState;\n    this.initialState = initialState\n    this.states = states;\n  }\n\n  transition(transitionName) {\n    const nextState = this.states[this.state]?.transitions?.[transitionName];\n    //check if the state has a transition with said name\n    if (nextState) {\n      this.state = nextState;\n      this.transitionSubsrcibers.forEach((transitionFunction) =>\n        transitionFunction(this.state)\n      );\n      this.error = \"\";\n      this.errorSubscribers.forEach((errorFunction) =>\n        errorFunction(this.error)\n      );\n    } else {\n      this.error = `Error Can't transition ${this.state} to ${transitionName}`;\n      this.errorSubscribers.forEach((errorFunction) =>\n        errorFunction(this.error)\n      );\n    }\n  }\n\n\n  getState(){\n    return this.state\n  }\n\n  getError(){\n    if(this.error){\n      return this.error\n    }\n  }\n\n  subscribe(onTransition, onError){\n    this.transitionSubsrcibers.add((onTransition))\n    onError && this.errorSubscribers.add((onError))\n  }\n  unsubscribe(onTransition, onError){\n    this.transitionSubsrcibers.delete((onTransition))\n    onError && this.errorSubscribers.delete((onError))\n  }\n\n}","import styled from 'styled-components'\n\n\nexport const Container = styled.div`\npadding: 32px;\ndisplay: flex;\nflex-direction: column;\n`\nexport const Title = styled.h1`\nmargin-right: 16px;\ncolor:grey;\n`\nexport const TitleContainer = styled.div`\ndisplay: flex;\nalign-items: center;\n`\nexport const Button = styled.button`\n    height: 30px;\n    width: 140px;\n    font-weight: 600;\n    background-color: white;\n    border: none;\n    color: grey;\n    transition: 0.3s;\n    &:hover{\n        background-color: grey;\n        color: white;\n        opacity: 0.8;\n    }\n`\nexport const ErrorMsg = styled.div`\n  color:red;\n  font-weight: 600;\n`\n\n","import React ,{useState}from 'react'\nimport { Button, Container, ErrorMsg,  Title, TitleContainer } from './StyledInput'\n\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport \"prismjs/themes/prism.css\"; //Example style, you can use another\n\nconst Input = ({ parsingError,fsm,clickHandler }) => {\n   const [code, setCode] = useState(JSON.stringify(fsm.states,undefined,2))\n    return (\n        \n        <Container>\n          <TitleContainer>\n          <Title>FSM Editor</Title>\n          <Button onClick={()=>clickHandler(code)}>Generate Fsm</Button>\n          </TitleContainer>\n        \n        {parsingError&&<ErrorMsg>this is not a valid json</ErrorMsg>}\n        <Editor\n          value={code}\n          onValueChange={setCode}\n          highlight={(code) => highlight(code, languages.js)}\n          padding={10}\n          style={{\n            minHeight: '500px',\n            overflow: 'auto',\n            fontSize: '20px',\n          }}\n        />\n        </Container>\n    )\n}\n\nexport default Input\n","import styled from 'styled-components'\n\nexport const DropDownContainer = styled.div`\n`\nexport const Container = styled.div`\n  height: 100%;\n  width: 100%;\n`\nexport const DropDownContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  background-color: #f1f1f1;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 1;\n  background-color: #ddd;\n`\n\nexport const DropDownButton = styled.button`\n  color: white;\n  padding: 16px;\n  font-size: 16px;\n  border: none;\n  background-color: grey;\n`\nexport const Button = styled.button`\n  height: 30px;\n  width: 100%;\n  font-weight: 600;\n  background-color: white;\n  border: none;\n  color: grey;\n  transition: 0.3s;\n  &:hover{\n      background-color: grey;\n      color: white;\n      opacity: 0.8;\n  }\n`\n\n\n\n\n\n\n\n","import React, { useState } from 'react'\nimport { Button, Container, DropDownButton, DropDownContainer, DropDownContent } from './StyledOutput';\n\nconst Output = ({transition,fsm,state,actionsStack,setActionsStack}) => {\n    const possibilities = fsm?.states[state]?.transitions\n    const mappedPossibilities = Object.keys(possibilities)\n    const [dropDownHovered, setDropDownHovered] = useState(false)\n    return (\n        <Container>\n            <DropDownContainer onMouseEnter={()=>setDropDownHovered(true)} onMouseLeave={()=>setDropDownHovered(false)}>\n            <DropDownButton>selectNextState</DropDownButton>\n                 {dropDownHovered&& <DropDownContent class=\"dropdown-content\">\n                      {possibilities && mappedPossibilities.map((posibility)=>{\n                            return<Button onClick={()=>{transition(posibility)}}>{posibility}</Button>\n                        })}\n                 </DropDownContent>\n                }\n            </DropDownContainer>\n       </Container>\n    )\n}\n\nexport default Output\n","import styled from 'styled-components'\n\n\n\nexport const OuterContainer = styled.div`\n    display: flex;\n    height:100vh;\n    width:100vw;\n    flex:1;\n`\nexport const LeftContainer = styled.div`\n    background-color: whitesmoke;\n    height: 100%;\n    width: 100%;\n`\nexport const RightContainer = styled.div`\n    background-color: white;\n    height: 100%;\n    width: 100%;\n`","import React, { useState } from 'react'\nimport { FSM } from '../../fsm';\nimport { useFSM } from '../../fsm/fsm-react';\nimport Input from '../../components/Input/Input'\nimport Output from '../../components/Output/Output'\nimport { LeftContainer, OuterContainer, RightContainer } from './StyledMainPage'\n\nconst initalFsm = {\n    initialState: \"up\",\n  states: {\n    up: {\n      transitions: {\n        RIGHT: \"right\",\n      }\n    },\n    right: {\n      transitions: {\n        DOWN: \"down\"\n      }\n    },\n    down: {\n      transitions: {\n        LEFT: \"left\"\n      }\n    },\n    left: {\n      transitions: {\n        UP: \"up\"\n      }\n    },\n    }\n  };\n\nconst MainPage = () => {\n    const [fsm, setFSM] = useState(()=>new FSM(initalFsm))\n    const [actionsStack, setActionsStack] = useState([])\n    const { state, transition } = useFSM(fsm);\n    const [parsingError, setParsingError] = useState(null)\n    const clickHandler=(code)=>{\n        try {\n            const parsedJson = JSON.parse(code);\n                setFSM(prev => {\n                  const newFSMOptions = {\n                    ...prev,\n                    states: parsedJson\n                  };\n                  return new FSM(newFSMOptions);\n                })\n        } catch (e) {\n            setParsingError(e);\n        }\n    }\n\n    return (\n        <OuterContainer>\n            <LeftContainer><Input parsingError={parsingError} fsm={fsm} clickHandler={clickHandler}/></LeftContainer>\n            <RightContainer><Output transition={transition} fsm={fsm} state={state} actionsStack={actionsStack} setActionsStack={setActionsStack}/></RightContainer>\n        </OuterContainer>\n    )\n}\n\nexport default MainPage\n","import { useState, useCallback, useEffect } from 'react'\n\nexport const useFSM=(fsm)=>{\n    const [state, setState] = useState(fsm.getState())\n    const [error, setError] = useState(fsm.getError())\n\n    const onTransition = useCallback(\n        (nextState) => {\n      \n            setState(nextState)\n        },\n        [],\n    )\n    const onError = useCallback(\n        (error) => {\n            setError(error)\n        },\n        [],\n    )\n\n    useEffect(() => {\n        fsm.subscribe(onTransition,onError)\n        return () => {\n            fsm.unsubscribe(onTransition,onError)\n        }\n    }, [fsm,onTransition,onError])\n\n    useEffect(() => {\n        if(fsm.getState()!== state){\n            setState(fsm.getState())\n        }\n    }, [fsm,state])\n\n    const transition =useCallback(\n        (transitionName) => {\n            fsm.transition(transitionName)\n        },\n        [fsm],\n    )\n\n    return {state, error, transition}\n}","import MainPage from './pages/MainPage/MainPage';\n\nconst App=()=> {\n  return <MainPage/>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}